swagger: '2.0'
info:
  description: This is a server for WKON
  version: 1.0.0
  title: WKON
host: 'localhost:5088'
tags:
  - name: user
    description: Operations about user
securityDefinitions:
  key:
    type: apiKey
    in: header
    name: Key
schemes:
  - http
paths:
  /user:
    post:
      security:
        - key: []
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: User
  /user/createWithArray:
    post:
      security:
        - key: []
      tags:
        - user
      summary: Creates list of users with given input array
      description: ''
      operationId: createUsersWithArrayInput
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: List of user object
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: User
  /user/createWithList:
    post:
      security:
        - key: []
      tags:
        - user
      summary: Creates list of users with given input array
      description: ''
      operationId: createUsersWithListInput
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: List of user object
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: User
  /user/login:
    get:
      security:
        - key: []
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid username/password supplied
      x-swagger-router-controller: User
  /user/logout:
    get:
      security:
        - key: []
      tags:
        - user
      summary: Logs out current logged fin user session
      description: ''
      operationId: logoutUser
      produces:
        - application/xml
        - application/json
      parameters: []
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: User
  /user/resetPassword:
    put:
      security:
        - key: []
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: resetPassword
      produces:
        - application/xml
        - application/json
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/passwords'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: User
  '/user/{id}':
    get:
      security:
        - key: []
      tags:
        - user
      summary: Get user by id
      description: ''
      operationId: getUserById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
      x-swagger-router-controller: User
    put:
      security:
        - key: []
      tags:
        - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
      x-swagger-router-controller: User
  /user/delete:
    delete:
      security:
        - key: []
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: query
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
      x-swagger-router-controller: User
  /user/getAllUser:
    get:
      security:
        - key: []
      tags:
        - user
      summary: Get all user
      description: ''
      operationId: getAllUser
      produces:
        - application/xml
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
      x-swagger-router-controller: User
  /user/dashboardDetails:
    get:
      security:
        - key: []
      tags:
        - user
      summary: Get user by id
      description: ''
      operationId: userDashboardDetails
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: query
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Project'
        '400':
          description: Invalid user
        '404':
          description: User not found
      x-swagger-router-controller: User
  /user/clientDashboardDetails:
    get:
      security:
        - key: []
      tags:
        - user
      summary: Get user by id
      description: ''
      operationId: clientDashboardDetails
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: query
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Project'
        '400':
          description: Invalid user
        '404':
          description: client not found
      x-swagger-router-controller: User
  /user/findByRole:
    get:
      security:
        - key: []
      tags:
        - user
      summary: Get user by role
      description: ''
      operationId: findByRole
      produces:
        - application/xml
        - application/json
      parameters:
        - name: role
          in: query
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
      x-swagger-router-controller: User
  /user/findBytags:
    get:
      security:
        - key: []
      tags:
        - user
      summary: Get user by tags
      description: ''
      operationId: getUserTags
      produces:
        - application/xml
        - application/json
      parameters:
        - name: tags
          in: query
          description: The user name for login
          required: true
          type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
      x-swagger-router-controller: User
  /client:
    post:
      security:
        - key: []
      tags:
        - client
      summary: Create client
      description: This can only be done by the logged in client.
      operationId: createClient
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created client object
          required: true
          schema:
            $ref: '#/definitions/Client'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: Client
  /client/login:
    get:
      security:
        - key: []
      tags:
        - client
      summary: Logs client into the system
      description: ''
      operationId: loginclient
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid username/password supplied
      x-swagger-router-controller: Client
  /client/clientlist:
    get:
      security:
        - key: []
      tags:
        - client
      summary: Logs client into the system
      description: ''
      operationId: getClientList
      produces:
        - application/xml
        - application/json
      parameters:
        - name: userId
          in: query
          description: The user id of logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '400':
          description: Invalid username/password supplied
      x-swagger-router-controller: Client
  '/client/{id}':
    get:
      security:
        - key: []
      tags:
        - client
      summary: Get client by id
      description: ''
      operationId: getclientById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Client'
        '400':
          description: Invalid username supplied
        '404':
          description: Client not found
      x-swagger-router-controller: Client
    put:
      security:
        - key: []
      tags:
        - client
      summary: Updated client
      description: This can only be done by the logged in client.
      operationId: updateClient
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: Detail that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated client object
          required: true
          schema:
            $ref: '#/definitions/Client'
      responses:
        '400':
          description: Invalid client supplied
        '404':
          description: Client not found
      x-swagger-router-controller: Client
    delete:
      security:
        - key: []
      tags:
        - client
      summary: Delete client
      description: This can only be done by the logged in client.
      operationId: deleteclient
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: The id that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: Client not found
      x-swagger-router-controller: Client
  /project:
    post:
      security:
        - key: []
      tags:
        - project
      summary: Create project
      description: This can only be done by the logged in user.
      operationId: CreateProject
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created project object
          required: true
          schema:
            $ref: '#/definitions/Project'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: Project
  /project/projectlist:
    get:
      security:
        - key: []
      tags:
        - project
      summary: Gets the project list which user is a member of
      description: ''
      operationId: getProjectList
      produces:
        - application/xml
        - application/json
      parameters:
        - name: userId
          in: query
          description: The user id of logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
      x-swagger-router-controller: Project
  /project/addmember:
    put:
      security:
        - key: []
      tags:
        - project
      summary: Updated project
      description: This can only be done by the logged in user.
      operationId: updateProjectByMembers
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: query
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/addmember'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: project not found
      x-swagger-router-controller: Project
  /project/deletemember:
    put:
      security:
        - key: []
      tags:
        - project
      summary: Updated project
      description: This can only be done by the logged in user.
      operationId: deleteProjectByMemberId
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: query
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: userId
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/Deletemember'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: project not found
      x-swagger-router-controller: Project
  '/project/{id}':
    get:
      security:
        - key: []
      tags:
        - project
      summary: Get project by id
      description: ''
      operationId: getProjectById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Project'
        '400':
          description: Invalid Project Id supplied
        '404':
          description: Project not found
      x-swagger-router-controller: Project
    put:
      security:
        - key: []
      tags:
        - project
      summary: Updated project
      description: This can only be done by the logged in user.
      operationId: updateProject
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: project not found
      x-swagger-router-controller: Project
    delete:
      security:
        - key: []
      tags:
        - project
      summary: Delete project
      description: This can only be done by the logged in user.
      operationId: deleteProject
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: The project that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid project supplied
        '404':
          description: Project not found
      x-swagger-router-controller: Project
  /project/getbymemberId:
    get:
      security:
        - key: []
      tags:
        - project
      summary: Get project by id
      description: ''
      operationId: getProjectByMembers
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: query
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Project'
        '400':
          description: Invalid Project Id supplied
        '404':
          description: Project not found
      x-swagger-router-controller: Project
  /bill:
    post:
      security:
        - key: []
      tags:
        - bill
      summary: Create bill
      description: This enables a user to cretae a bill for a project.
      operationId: createBill
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created bill object
          required: true
          schema:
            $ref: '#/definitions/Bill'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: Bill
    get:
      security:
        - key: []
      tags:
        - bill
      summary: Get List of bills raised by user
      description: This enables a user to list all bills craeted by the user.
      operationId: getBill
      parameters:
        - in: query
          name: userId
          description: user id of logged in user
          required: true
          type: string
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: Bill
    put:
      security:
        - key: []
      tags:
        - bill
      summary: Update bill
      description: This enables a user to update a bill for a project.
      operationId: updateBill
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: query
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/Bill'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: bill not found
      x-swagger-router-controller: Bill
  '/bill/{id}':
    delete:
      security:
        - key: []
      tags:
        - bill
      summary: Delete bill
      description: This can only be done by the logged in user.
      operationId: deleteBill
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: The bill that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid project supplied
        '404':
          description: Bill not found
      x-swagger-router-controller: Bill
  /email:
    post:
      security:
        - key: []
      tags:
        - email
      summary: send email
      description: This enables a user to send a email.
      operationId: sendmail
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created email object
          required: true
          schema:
            $ref: '#/definitions/Email'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: email
  /file:
    post:
      operationId: fileUpload
      tags:
        - file
      description: Upload image
      consumes:
        - multipart/form-data
        - application/x-www-form-urlencoded
      parameters:
        - name: file
          in: formData
          type: file
          description: Image information
          required: true
      responses:
        '200':
          description: Successful request
        default:
          description: Invalid request
      x-swagger-router-controller: Upload
  /module:
    post:
      security:
        - key: []
      tags:
        - module
      summary: send email
      description: This enables a user to send a email.
      operationId: createmodule
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created email object
          required: true
          schema:
            $ref: '#/definitions/Module'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: Module
  '/module/{id}':
    get:
      security:
        - key: []
      tags:
        - module
      summary: Get project by id
      description: ''
      operationId: getmodule
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Module'
        '400':
          description: Invalid Module Id supplied
        '404':
          description: Module not found
      x-swagger-router-controller: Module
    put:
      security:
        - key: []
      tags:
        - module
      summary: Updated module
      description: This can only be done by the logged in user.
      operationId: updatemodule
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/Module'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: project not found
      x-swagger-router-controller: Module
    delete:
      security:
        - key: []
      tags:
        - module
      summary: Delete module
      description: This can only be done by the logged in user.
      operationId: deletemodule
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: The project that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid module supplied
        '404':
          description: module not found
      x-swagger-router-controller: Module
  /module/getbyprojectid:
    get:
      security:
        - key: []
      tags:
        - module
      summary: Get project by id
      description: ''
      operationId: getmoduleBYProjectId
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: query
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Module'
        '400':
          description: Invalid Module Id supplied
        '404':
          description: Module not found
      x-swagger-router-controller: Module
  /submodule:
    post:
      security:
        - key: []
      tags:
        - submodule
      summary: submodule
      description: This enables a user to create.
      operationId: createsubmodule
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created sub module object
          required: true
          schema:
            $ref: '#/definitions/Submodule'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: Submodule
  '/submodule/{id}':
    get:
      security:
        - key: []
      tags:
        - submodule
      summary: Get project by id
      description: ''
      operationId: getsubmodule
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Submodule'
        '400':
          description: Invalid Module Id supplied
        '404':
          description: Module not found
      x-swagger-router-controller: Submodule
    put:
      security:
        - key: []
      tags:
        - submodule
      summary: Updated module
      description: This can only be done by the logged in user.
      operationId: updatesubmodule
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/Submodule'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: project not found
      x-swagger-router-controller: Submodule
    delete:
      security:
        - key: []
      tags:
        - submodule
      summary: Delete module
      description: This can only be done by the logged in user.
      operationId: deletesubmodule
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: The module that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid module supplied
        '404':
          description: module not found
      x-swagger-router-controller: Submodule
  /submodule/getbymoduleid:
    get:
      security:
        - key: []
      tags:
        - submodule
      summary: Get project by id
      description: ''
      operationId: getsubmoduleByModule
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: query
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Submodule'
        '400':
          description: Invalid Module Id supplied
        '404':
          description: Module not found
      x-swagger-router-controller: Submodule
  /task:
    post:
      security:
        - key: []
      tags:
        - task
      summary: task
      description: This enables a user to create.
      operationId: createtask
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created task object
          required: true
          schema:
            $ref: '#/definitions/Task'
      responses:
        default:
          description: successful operation
      x-swagger-router-controller: Task
  '/task/{id}':
    get:
      security:
        - key: []
      tags:
        - task
      summary: Get task by id
      description: ''
      operationId: gettask
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid Module Id supplied
        '404':
          description: Module not found
      x-swagger-router-controller: Task
    put:
      security:
        - key: []
      tags:
        - task
      summary: Updated task
      description: This can only be done by the logged in user.
      operationId: updatetask
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/Task'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: task not found
      x-swagger-router-controller: Task
    delete:
      security:
        - key: []
      tags:
        - task
      summary: Delete module
      description: This can only be done by the logged in user.
      operationId: deletetask
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: path
          description: The module that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid module supplied
        '404':
          description: module not found
      x-swagger-router-controller: Task
  /task/addassignto:
    put:
      security:
        - key: []
      tags:
        - task
      summary: Updated task
      description: This can only be done by the logged in user.
      operationId: updatetaskmember
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: query
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/addMember'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: task not found
      x-swagger-router-controller: Task
  /task/deleteassignto:
    put:
      security:
        - key: []
      tags:
        - task
      summary: Updated task
      description: This can only be done by the logged in user.
      operationId: deletetaskByassigntoId
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: query
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: body
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/addMember'
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: task not found
      x-swagger-router-controller: Task
  /task/getbysubmoduleid:
    get:
      security:
        - key: []
      tags:
        - task
      summary: Get task by submodule id
      description: ''
      operationId: gettaskBySubmoduleId
      produces:
        - application/xml
        - application/json
      parameters:
        - name: id
          in: query
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Task'
        '400':
          description: Invalid Module Id supplied
        '404':
          description: Module not found
      x-swagger-router-controller: Task    
definitions:
  User:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      password:
        type: string
      tags:
        type: array
        items:
          type: string
      manager:
        type: string
      role:
        type: string
    example:
      password: password
      role: role
      phone: phone
      email: email
      tags: tags
      name: username
      manager: manager
    xml:
      name: User
  Client:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      country:
        type: string
      domain:
        type: string
      phoneNumber:
        type: string
      status:
        type: string
      userId:
        type: string
      address:
        type: string
      company:
        type: string
      paypalId:
        type: string
      currency:
        type: string
    example:
      status: status
      country: country
      phoneNumber: phone
      email: email
      domain: domain
      name: name
      userId: userId
      address: address
      company: company
      paypalId: paypalId
      currency: currency
    xml:
      name: Client
  Project:
    type: object
    properties:
      name:
        type: string
      requirement:
        type: string
      status:
        type: string
      technology:
        type: string
      expectedStartDate:
        type: string
      actualStartDate:
        type: string
      expectedEndDate:
        type: string
      actualEndDate:
        type: string
      client:
        type: string
      userId:
        type: string
    example:
      requirement: requirement
      status: status
      technology: technology
      expectedStartDate: expectedStartDate
      actualStartDate: actualStartDate
      expectedEndDate: expectedEndDate
      actualEndDate: actualEndDate
      name: name
      client: client id
      userId: user id
    xml:
      name: Project
  Bill:
    type: object
    properties:
      userId:
        type: string
      billingDate:
        type: string
      paypalBillNumber:
        type: string
      billNumber:
        type: string
      BDE:
        type: string
      type:
        type: string
      client:
        type: string
      company:
        type: string
      paypalAccountName:
        type: string
      email:
        type: string
      projectName:
        type: string
      projectCost:
        type: number
      receivedAmount:
        type: number
      balance:
        type: number
      currency:
        type: string
      receivedDate:
        type: string
      status:
        type: string
    example:
      userId: user id of logged in user
      billingDate: Date
      paypalBillNumber: paypal bill number
      billNumber: bill number
      BDE: id of the sales person
      type: type
      client: id of the client
      company: company of client
      paypalAccountName: paypal account name
      email: client email
      projectName: project
      projectCost: 2000
      receivedAmount: 500
      balance: 1500
      currency: USD
      receivedDate: Date when the credit is received
      status: status of the bill
    xml:
      name: bill
  passwords:
    type: object
    properties:
      id:
        type: string
      password:
        type: string
      newPassword:
        type: string
    example:
      id: id
      password: password
      newPassword: newPassword
    xml:
      name: passwords
  addmember:
    type: array
    items:
      type: object
      properties:
        userId:
          type: string
        role:
          type: string
    example:
      userId: userId
      role: role
    xml:
      name: addmember
  Email:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      subject:
        type: string
    example:
      name: name
      email: email
      subject: subject
    xml:
      name: Email
  Deletemember:
    type: object
    properties:
      userId:
        type: string
    example:
      userId: userId
    xml:
      name: Deletemember
  Module:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      projectId:
        type: string
    example:
      name: name
      description: description
      projectId: projectId
    xml:
      name: Module
  Submodule:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      moduleId:
        type: string
    example:
      name: name
      description: description
      moduleId: moduleId
    xml:
      name: Submodule
  Task:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      submoduleId:
        type: string
      startDate:
        type: string 
      endDate:
        type: string   
    example:
      name: name
      description: description
      submoduleId: moduleId
      startDate: startDate
      endDate: endDate
    xml:
      name: Task
  addMember:
    type: object
    properties:
      assignTo:
        type: string
    example:
      userId: assignTo
    xml:
      name: addMember
